<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PHP project coordination on PHP RFC&#39;s</title>
    <link>https://phpinternal.github.io/wiki/</link>
    <description>Recent content in PHP project coordination on PHP RFC&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://phpinternal.github.io/wiki/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bugs to Work On</title>
      <link>https://phpinternal.github.io/wiki/page/bugs-to-work-on/</link>
      <pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phpinternal.github.io/wiki/page/bugs-to-work-on/</guid>
      <description>PDO -&amp;gt; PDO driver error conditions There is an oversight between PDO and some PDO drivers on how certain error conditions are missed. This leads to some error conditions having their error message or exception not triggered: https://bugs.php.net/bug.php?id=77490
Link: https://github.com/php/php-src/pull/4288</description>
    </item>
    
    <item>
      <title>Infrastructure Stuff to Work On</title>
      <link>https://phpinternal.github.io/wiki/page/infrastructure-stuff-to-work-on/</link>
      <pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phpinternal.github.io/wiki/page/infrastructure-stuff-to-work-on/</guid>
      <description>Move documentation from SVN to Git/github Editing the documentation is currently quite difficult. Moving it to git/github would make it easier.
Link: https://github.com/phpdoctest/meta
Setup easier to use wiki The number of people who are able to edit our wiki are very small due to how hard it is to collorate on documents, as well as how difficult it is for people who don&amp;rsquo;t have a php.net account to make changes.</description>
    </item>
    
    <item>
      <title>Internal stuff to work on</title>
      <link>https://phpinternal.github.io/wiki/page/internal-stuff-to-work-on/</link>
      <pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phpinternal.github.io/wiki/page/internal-stuff-to-work-on/</guid>
      <description>ext/* - Resource to object conversion in extensions The &amp;lsquo;resource&amp;rsquo; type was needed before PHP had classes to represent non-trivial types. However since PHP now has classes, it would be good to replace the resource types used internally.
Link: https://github.com/php-pecl/ProjectCoordination/blob/master/change_resource_to_specific_type.md
Core - Annotate internal function types We now have the capabilty to add type information to PHP core functions. The work is not difficult, but there is a large amount of it.</description>
    </item>
    
    <item>
      <title>Union types</title>
      <link>https://phpinternal.github.io/wiki/rfc/union_types_v2/</link>
      <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://phpinternal.github.io/wiki/rfc/union_types_v2/</guid>
      <description>Introduction A &amp;ldquo;union type&amp;rdquo; accepts values of multiple different types, rather than a single one. PHP already supports two special union types:
 Type or null, using the special ?Type syntax. array or Traversable, using the special iterable type.  However, arbitrary union types are currently not supported by the language. Instead, phpdoc annotations have to be used, such as in the following example:
class Number { /** * @var int|float $number */ private $number; /** * @param int|float $number */ public function setNumber($number) { $this-&amp;gt;number = $number; } /** * @return int|float */ public function getNumber() { return $this-&amp;gt;number; } }  The statistics section shows that the use of union types is indeed pervasive in the open-source ecosystem, as well as PHP&amp;rsquo;s own standard library.</description>
    </item>
    
  </channel>
</rss>